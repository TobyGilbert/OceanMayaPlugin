#ifndef OCEANNODE_H
#define OCEANNODE_H

#define short2 MAYA_short2
#define short3 MAYA_short3
#define long2 MAYA_long2
#define long3 MAYA_long3
#define int2 MAYA_int2
#define int3 MAYA_int3
#define float2 MAYA_float2
#define float3 MAYA_float3
#define double2 MAYA_double2
#define double3 MAYA_double3
#define double4 MAYA_double4

#include <maya/MTypeId.h>
#include <maya/MStatus.h>
#include <maya/M3dView.h>
#include <maya/MGlobal.h>
#include <maya/MPxLocatorNode.h>
#include <maya/MFnDependencyNode.h>
#include <maya/MNodeMessage.h>
#include <maya/MMessage.h>
#include <maya/MFnNumericAttribute.h>
#include <maya/MFnUnitAttribute.h>
#include <maya/MFnEnumAttribute.h>
#include <maya/MTime.h>
#include <maya/MFloatPointArray.h>
#include <maya/MFnMesh.h>
#include <maya/MFnMeshData.h>
#include <maya/MFnTypedAttribute.h>
#include <maya/MAnimControl.h>

#undef short2
#undef short3
#undef long2
#undef long3
#undef int2
#undef int3
#undef float2
#undef float3
#undef double2
#undef double3
#undef double4

#include "Ocean.h"
#include <vector>
//----------------------------------------------------------------------------------------------------------------------
/// @brief This class implements a Cuda FFT ocean node with one mesh output
//----------------------------------------------------------------------------------------------------------------------
class OceanNode : public MPxNode{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The creator node is called when the plugin is created
  //----------------------------------------------------------------------------------------------------------------------
  static void		*creator();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Initialize called when plug is created
  //----------------------------------------------------------------------------------------------------------------------
  static MStatus		initialize();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Compute is called every time the attributes of the class change
  /// @param [in] 	_plug 	plug representing the attribute that needs to be recomputed
  /// @param [in] 	_block data block containing storage for the node'_scale attributes
  //----------------------------------------------------------------------------------------------------------------------
  virtual MStatus		compute(const MPlug &_plug ,MDataBlock &_block);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The id of this plugin must be public so we can set outside of class
  //----------------------------------------------------------------------------------------------------------------------
  static MTypeId 		m_id;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The unique type name of our custom node. Mainly for mel purposes.
  /// must be public so maya can access
  //----------------------------------------------------------------------------------------------------------------------
  static const MString typeName;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Constructor this will dynamically allocate a ocean class
  //----------------------------------------------------------------------------------------------------------------------
  OceanNode();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Destructor this will destroy the ocean class created in the constructor
  //----------------------------------------------------------------------------------------------------------------------
  ~OceanNode();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Creates a new MFnMesh to represent our ocean
  /// @param _resolution the resolution of our grid
  /// @param _time the current simulation time
  /// @param _choppiness a scale factor for how much displacement we have in the x
  /// and z axis
  /// @param _outputData an object which represents the output mesh of our node
  /// @param _status to check whether MFnMesh creation was successful
  //----------------------------------------------------------------------------------------------------------------------
  void createGrid(int _resolution, double _time, double _choppiness, MObject &_outputData, MStatus &_status);
  //----------------------------------------------------------------------------------------------------------------------
private :
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The amplitude of our waves
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_amplitude;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The wind speed in the X axis
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_windDirectionX;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The wind speed in the Z axis
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_windDirectionZ;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The output to our node
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_output;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The current time/frame No. of our simulation
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_time;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The choppiness scale factor
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_choppiness;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The ocean generator
  //----------------------------------------------------------------------------------------------------------------------
  Ocean *m_ocean;
  //----------------------------------------------------------------------------------------------------------------------
  /// A mesh Holds our ocean grid mesh
  //----------------------------------------------------------------------------------------------------------------------
  MFnMesh m_grid;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Attribute for keeping track of the amplitude variable
  //----------------------------------------------------------------------------------------------------------------------
  static double m_amp;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Attribute for keeping track of the wind dir x variable
  //----------------------------------------------------------------------------------------------------------------------
  static double m_wdx;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Attribute for keeping track of the wind dir y variable
  //----------------------------------------------------------------------------------------------------------------------
  static double m_wdz;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Attribute for keeping track of the wind speed variable
  //----------------------------------------------------------------------------------------------------------------------
  static double m_ws;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The grid resolution
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_resolution;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Our available grid resolutions
  //----------------------------------------------------------------------------------------------------------------------
  enum ResTypes{RES128,RES256,RES512, RES1024};
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Check our resolution against the previous
  //----------------------------------------------------------------------------------------------------------------------
  static int m_res;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Our wind speed
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_windSpeed;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Frequency of our waves
  //----------------------------------------------------------------------------------------------------------------------
  static MObject m_frequency;
  //----------------------------------------------------------------------------------------------------------------------
};
//----------------------------------------------------------------------------------------------------------------------

#endif


